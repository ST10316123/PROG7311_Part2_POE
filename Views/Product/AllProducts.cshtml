@model CategoryFilterModel
@{
    ViewData["Title"] = "All Products";
    var groupedProducts = ViewBag.GroupedProducts as List<FarmerProductGroupViewModel>;
}

<h2>All Products</h2>

<!-- Filter Form -->
<form asp-action="AllProducts" method="get" class="mb-4">
    <div class="form-row">
        <div class="col-md-3">
            <select name="category" class="form-control">
                <option value="">-- Select Category --</option>
                @foreach (var cat in Model.Categories)
                {
                    <option value="@cat" selected="@(Model.Category == cat)">
                        @cat
                    </option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <input type="date" name="startDate" class="form-control" value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" />
        </div>
        <div class="col-md-3">
            <input type="date" name="endDate" class="form-control" value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Filter</button>
            <a asp-action="AllProducts" class="btn btn-secondary">Reset</a>
        </div>
    </div>
</form>

<!-- Grouped Product List -->
@if (groupedProducts != null && groupedProducts.Any())
{
    foreach (var group in groupedProducts)
    {
        <h4>@group.FarmerName</h4>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Production Date</th>
                    <th>Image</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in group.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Category</td>
                        <td>@product.ProductionDate.ToShortDateString()</td>
                        <td>
                            @if (!string.IsNullOrEmpty(product.ImagePath))
                            {
                                <img src="@Url.Content(product.ImagePath)" alt="Product Image" width="100" />
                            }
                            else
                            {
                                <span>No image</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
else
{
    <p>No products found.</p>
}
